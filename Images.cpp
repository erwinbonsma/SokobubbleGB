#include "Images.h"

const Color DARKGREEN = (Color) 0x0306;
// Standard Gamebuino palette, except for: BEIGE => DARKGREEN
const Color customPalette[] = {
  BLACK, DARKBLUE, PURPLE, GREEN,
  BROWN, DARKGRAY, GRAY, WHITE,
  RED, ORANGE, YELLOW, LIGHTGREEN,
  LIGHTBLUE, BLUE, PINK, DARKGREEN
};

const uint8_t PLAYER_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x0a, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x05, // transparent color
    1,    // indexed color mode

    // frame 1/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x07, 0x60, 0x65,
    0x54, 0x06, 0x60, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x55, 0x55, 0x55, 0x55,

    // frame 2/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x07, 0x60, 0x45,
    0x54, 0x06, 0x60, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 3/10
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x07, 0x60, 0x45,
    0x56, 0x06, 0x60, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 4/10
    0x55, 0x54, 0x55, 0x55,
    0x55, 0x40, 0x00, 0x55,
    0x56, 0x00, 0x00, 0x05,
    0x54, 0x07, 0x60, 0x04,
    0x40, 0x06, 0x60, 0x45,
    0x50, 0x00, 0x00, 0x65,
    0x55, 0x00, 0x04, 0x55,
    0x55, 0x55, 0x45, 0x55,

    // frame 5/10
    0x55, 0x55, 0x45, 0x55,
    0x55, 0x64, 0x00, 0x55,
    0x54, 0x00, 0x00, 0x05,
    0x40, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x04,
    0x50, 0x00, 0x00, 0x45,
    0x55, 0x00, 0x46, 0x55,
    0x55, 0x54, 0x55, 0x55,

    // frame 6/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x46, 0x44, 0x65,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x54, 0x46, 0x44, 0x65,
    0x55, 0x55, 0x55, 0x55,

    // frame 7/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x64, 0x46, 0x45,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x54, 0x64, 0x46, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 8/10
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x44, 0x64, 0x45,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x56, 0x44, 0x64, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 9/10
    0x55, 0x54, 0x55, 0x55,
    0x55, 0x00, 0x46, 0x55,
    0x50, 0x00, 0x00, 0x45,
    0x50, 0x07, 0x60, 0x04,
    0x40, 0x06, 0x60, 0x05,
    0x54, 0x00, 0x00, 0x05,
    0x55, 0x64, 0x00, 0x55,
    0x55, 0x55, 0x45, 0x55,

    // frame 10/10
    0x55, 0x55, 0x45, 0x55,
    0x55, 0x00, 0x04, 0x55,
    0x50, 0x00, 0x00, 0x65,
    0x40, 0x07, 0x60, 0x45,
    0x54, 0x06, 0x60, 0x04,
    0x56, 0x00, 0x00, 0x05,
    0x55, 0x40, 0x00, 0x55,
    0x55, 0x54, 0x55, 0x55,
};
Image playerImage(PLAYER_DATA);

const uint8_t COCKPIT_DATA[] = {
    2,    // frame width
    2,    // frame height
    0x05, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/5
    0x76,
    0x66,

    // frame 2/5
    0xe8,
    0x88,

    // frame 3/5
    0xb3,
    0x33,

    // frame 4/5
    0xcd,
    0xdd,

    // frame 5/5
    0xa9,
    0x99,
};
Image cockpitImage(COCKPIT_DATA);

const uint8_t WALLS_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x40, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/64
    0x56, 0x66, 0x66, 0x65,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x50, 0x00, 0x00, 0x05,

    // frame 2/64
    0x06, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x50,

    // frame 3/64
    0x66, 0x66, 0x66, 0x60,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x05, 0x55, 0x55, 0x51,

    // frame 4/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x01, 0x11, 0x11, 0x11,

    // frame 5/64
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x11, 0x11, 0x11, 0x10,

    // frame 6/64
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,

    // frame 7/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x11, 0x11, 0x11, 0x11,

    // frame 8/64
    0x56, 0x66, 0x66, 0x65,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,

    // frame 9/64
    0x66, 0x66, 0x66, 0x65,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x00, 0x00, 0x00, 0x05,

    // frame 10/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x50, 0x00, 0x00, 0x05,

    // frame 11/64
    0x56, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x50, 0x00, 0x00, 0x00,

    // frame 12/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x05, 0x55, 0x55, 0x50,

    // frame 13/64
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x05, 0x55, 0x55, 0x51,

    // frame 14/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x11, 0x11, 0x11, 0x11,

    // frame 15/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x50,

    // frame 16/64
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x66, 0x66, 0x55,
    0x56, 0x55, 0x55, 0x05,
    0x56, 0x55, 0x55, 0x05,
    0x56, 0x55, 0x55, 0x05,
    0x56, 0x55, 0x55, 0x05,
    0x55, 0x00, 0x00, 0x55,
    0x55, 0x55, 0x55, 0x55,

    // frame 17/64
    0x06, 0x66, 0x66, 0x60,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x01, 0x11, 0x11, 0x10,

    // frame 18/64
    0x56, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x51,

    // frame 19/64
    0x66, 0x66, 0x66, 0x65,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x15, 0x55, 0x55, 0x50,

    // frame 20/64
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x50, 0x00, 0x00, 0x00,

    // frame 21/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x00, 0x00, 0x00, 0x05,

    // frame 22/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,

    // frame 23/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x00, 0x00, 0x00, 0x00,

    // frame 24/64
    0x06, 0x66, 0x66, 0x60,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,

    // frame 25/64
    0x66, 0x66, 0x66, 0x60,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x11, 0x11, 0x11, 0x10,

    // frame 26/64
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x01, 0x11, 0x11, 0x10,

    // frame 27/64
    0x06, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x01, 0x11, 0x11, 0x11,

    // frame 28/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x15, 0x55, 0x55, 0x51,

    // frame 29/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x15, 0x55, 0x55, 0x50,

    // frame 30/64
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x00, 0x00, 0x00, 0x00,

    // frame 31/64
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x51,

    // frame 32/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x66, 0x66, 0x00,
    0x06, 0x55, 0x55, 0x10,
    0x06, 0x55, 0x55, 0x10,
    0x06, 0x55, 0x55, 0x10,
    0x06, 0x55, 0x55, 0x10,
    0x00, 0x11, 0x11, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 33/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 34/64
    0x56, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x50,

    // frame 35/64
    0x66, 0x66, 0x66, 0x65,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x05, 0x55, 0x55, 0x50,

    // frame 36/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x50, 0x00, 0x00, 0x00,

    // frame 37/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x00, 0x00, 0x00, 0x05,

    // frame 38/64
    0x66, 0x05, 0x55, 0x55,
    0x55, 0x50, 0x55, 0x55,
    0x55, 0x55, 0x05, 0x55,
    0x55, 0x55, 0x50, 0x55,
    0x55, 0x55, 0x55, 0x05,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,

    // frame 39/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 40/64
    0x56, 0x66, 0x66, 0x60,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,

    // frame 41/64
    0x66, 0x66, 0x66, 0x65,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x11, 0x11, 0x11, 0x10,

    // frame 42/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x01, 0x11, 0x11, 0x10,

    // frame 43/64
    0x56, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x01, 0x11, 0x11, 0x11,

    // frame 44/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x05, 0x55, 0x55, 0x50,

    // frame 45/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x05, 0x55, 0x55, 0x50,

    // frame 46/64
    0x65, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x00, 0x00, 0x00, 0x00,

    // frame 47/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x50,

    // frame 48/64
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x00, 0x00, 0x00, 0x05,

    // frame 49/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 50/64
    0x00, 0x00, 0x00, 0x66,
    0x00, 0x00, 0x06, 0x55,
    0x00, 0x00, 0x65, 0x55,
    0x00, 0x06, 0x55, 0x55,
    0x00, 0x65, 0x55, 0x55,
    0x06, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,

    // frame 51/64
    0x66, 0x00, 0x00, 0x00,
    0x55, 0x50, 0x00, 0x00,
    0x55, 0x55, 0x00, 0x00,
    0x55, 0x55, 0x50, 0x00,
    0x55, 0x55, 0x55, 0x00,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,

    // frame 52/64
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x05, 0x55, 0x55, 0x55,
    0x00, 0x55, 0x55, 0x55,
    0x00, 0x05, 0x55, 0x55,
    0x00, 0x00, 0x55, 0x55,
    0x00, 0x00, 0x05, 0x55,
    0x00, 0x00, 0x00, 0x11,

    // frame 53/64
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x10,
    0x55, 0x55, 0x51, 0x00,
    0x55, 0x55, 0x10, 0x00,
    0x55, 0x51, 0x00, 0x00,
    0x55, 0x10, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00,

    // frame 54/64
    0x66, 0x00, 0x00, 0x00,
    0x55, 0x50, 0x00, 0x00,
    0x55, 0x55, 0x00, 0x00,
    0x55, 0x55, 0x50, 0x00,
    0x55, 0x55, 0x55, 0x00,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,

    // frame 55/64
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x10,
    0x55, 0x55, 0x51, 0x00,
    0x55, 0x55, 0x10, 0x00,
    0x55, 0x51, 0x00, 0x00,
    0x55, 0x10, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00,

    // frame 56/64
    0x06, 0x66, 0x66, 0x60,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,
    0x65, 0x55, 0x55, 0x50,

    // frame 57/64
    0x66, 0x66, 0x66, 0x60,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x00, 0x00, 0x00, 0x00,

    // frame 58/64
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x00, 0x00, 0x00, 0x00,

    // frame 59/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 60/64
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x15, 0x55, 0x55, 0x50,

    // frame 61/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 62/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 63/64
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // frame 64/64
    0x66, 0x66, 0x66, 0x60,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x50,
    0x00, 0x00, 0x00, 0x00,
};
Image wallsImage(WALLS_DATA);

const uint8_t BOX_DATA[] = {
    6,    // frame width
    6,    // frame height
    0x08, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x0,  // transparent color
    1,    // indexed color mode

    // frame 1/8
    0x0e, 0xee, 0xe0,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0x02, 0x22, 0x20,

    // frame 2/8
    0x08, 0x88, 0x80,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x02, 0x22, 0x20,

    // frame 3/8
    0x0b, 0xbb, 0xb0,
    0xb3, 0x33, 0x3f,
    0xb3, 0x33, 0x3f,
    0xb3, 0x33, 0x3f,
    0xb3, 0x33, 0x3f,
    0x0f, 0xff, 0xf0,

    // frame 4/8
    0x03, 0x33, 0x30,
    0x3f, 0xff, 0xff,
    0x3f, 0xff, 0xff,
    0x3f, 0xff, 0xff,
    0x3f, 0xff, 0xff,
    0x0f, 0xff, 0xf0,

    // frame 5/8
    0x0c, 0xcc, 0xc0,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0x01, 0x11, 0x10,

    // frame 6/8
    0x0d, 0xdd, 0xd0,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0x01, 0x11, 0x10,

    // frame 7/8
    0x0a, 0xaa, 0xa0,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0x04, 0x44, 0x40,

    // frame 8/8
    0x09, 0x99, 0x90,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x04, 0x44, 0x40,
};
Image boxImage(BOX_DATA);

const uint8_t TARGET_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x05, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/5
    0x58, 0x85, 0x58, 0x85,
    0x85, 0x55, 0x55, 0x58,
    0x85, 0x55, 0x55, 0x58,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x85, 0x55, 0x55, 0x58,
    0x85, 0x55, 0x55, 0x58,
    0x58, 0x85, 0x58, 0x85,

    // frame 2/5
    0x53, 0x35, 0x53, 0x35,
    0x35, 0x55, 0x55, 0x53,
    0x35, 0x55, 0x55, 0x53,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x35, 0x55, 0x55, 0x53,
    0x35, 0x55, 0x55, 0x53,
    0x53, 0x35, 0x53, 0x35,

    // frame 3/5
    0x5d, 0xd5, 0x5d, 0xd5,
    0xd5, 0x55, 0x55, 0x5d,
    0xd5, 0x55, 0x55, 0x5d,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0xd5, 0x55, 0x55, 0x5d,
    0xd5, 0x55, 0x55, 0x5d,
    0x5d, 0xd5, 0x5d, 0xd5,

    // frame 4/5
    0x59, 0x95, 0x59, 0x95,
    0x95, 0x55, 0x55, 0x59,
    0x95, 0x55, 0x55, 0x59,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x95, 0x55, 0x55, 0x59,
    0x95, 0x55, 0x55, 0x59,
    0x59, 0x95, 0x59, 0x95,

    // frame 5/5
    0x56, 0x65, 0x56, 0x65,
    0x65, 0x55, 0x55, 0x56,
    0x65, 0x55, 0x55, 0x56,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x56,
    0x65, 0x55, 0x55, 0x56,
    0x56, 0x65, 0x56, 0x65,
};
Image targetImage(TARGET_DATA);

const uint8_t BUBBLE_DATA[] = {
    4,    // frame width
    4,    // frame height
    0x08, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0,    // transparent color
    1,    // indexed color mode

    // frame 1/4
    0x0e, 0x80,
    0xe7, 0xe8,
    0x8e, 0x88,
    0x08, 0x80,

    // frame 2/4
    0x0b, 0x30,
    0xb7, 0xb3,
    0x3b, 0x33,
    0x03, 0x30,

    // frame 3/4
    0x0c, 0xd0,
    0xc7, 0xcd,
    0xdc, 0xdd,
    0x0d, 0xd0,

    // frame 4/4
    0x0a, 0x90,
    0xa7, 0xa9,
    0x9a, 0x99,
    0x09, 0x90,

    // frame 5/8
    0x00, 0x00,
    0x07, 0xe0,
    0x0e, 0x80,
    0x00, 0x00,

    // frame 6/8
    0x00, 0x00,
    0x07, 0xb0,
    0x0b, 0x30,
    0x00, 0x00,

    // frame 7/8
    0x00, 0x00,
    0x07, 0xc0,
    0x0c, 0xd0,
    0x00, 0x00,

    // frame 8/8
    0x00, 0x00,
    0x07, 0xa0,
    0x0a, 0x90,
    0x00, 0x00,
};
Image bubbleImage(BUBBLE_DATA);

const uint8_t ICONS_DATA[] = {
    9,    // frame width
    9,    // frame height
    0x03, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0,    // transparent color
    1,    // indexed color mode

    // frame 1/3
    0x01, 0x11, 0x11, 0x11, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x11, 0x1c, 0xcc, 0x11, 0x10,
    0x11, 0xcc, 0x1c, 0xc1, 0x10,
    0x11, 0xcc, 0xcc, 0xc1, 0x10,
    0x11, 0xcc, 0x1c, 0xc1, 0x10,
    0x11, 0xcc, 0x1c, 0xc1, 0x10,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x01, 0x11, 0x11, 0x11, 0x00,

    // frame 2/3
    0x01, 0x11, 0x11, 0x11, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x11, 0x11, 0xc1, 0x11, 0x10,
    0x11, 0x1c, 0xc1, 0x11, 0x10,
    0x11, 0xcc, 0xcc, 0xc1, 0x10,
    0x11, 0x1c, 0xc1, 0x11, 0x10,
    0x11, 0x11, 0xc1, 0x11, 0x10,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x01, 0x11, 0x11, 0x11, 0x00,

    // frame 3/3
    0x01, 0x11, 0x11, 0x11, 0x00,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x11, 0x11, 0xc1, 0x11, 0x10,
    0x11, 0x11, 0xcc, 0x11, 0x10,
    0x11, 0xcc, 0xcc, 0xc1, 0x10,
    0x11, 0x11, 0xcc, 0x11, 0x10,
    0x11, 0x11, 0xc1, 0x11, 0x10,
    0x11, 0x11, 0x11, 0x11, 0x10,
    0x01, 0x11, 0x11, 0x11, 0x00,
};
Image iconsImage(ICONS_DATA);

const uint8_t HELP_ICONS_DATA[] = {
    5,    // frame width
    5,    // frame height
    0x03, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/3
    0x55, 0x55, 0xb0,
    0x55, 0x5b, 0xb0,
    0xb5, 0xbb, 0x50,
    0xbb, 0xb5, 0x50,
    0x5b, 0x55, 0x50,

    // frame 2/3
    0x85, 0x55, 0x80,
    0x58, 0x58, 0x50,
    0x55, 0x85, 0x50,
    0x58, 0x58, 0x50,
    0x85, 0x55, 0x80,

    // frame 3/3
    0x55, 0x65, 0x50,
    0x55, 0x66, 0x50,
    0x66, 0x66, 0x60,
    0x55, 0x66, 0x50,
    0x55, 0x65, 0x50,
};
Image helpIconsImage(HELP_ICONS_DATA);

const uint8_t LOGO_B_DATA[] = {
    10,   // frame width
    15,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x00, // transparent color
    1,    // indexed color mode

    0x00, 0xee, 0x00, 0x00, 0x00,
    0x0e, 0x88, 0x20, 0x00, 0x00,
    0xe8, 0x88, 0x82, 0x00, 0x00,
    0xe8, 0x88, 0x82, 0x00, 0x00,
    0xe8, 0x88, 0x82, 0x00, 0x00,
    0xe8, 0x88, 0x82, 0x22, 0x00,
    0xe8, 0x88, 0x28, 0x88, 0x20,
    0xe8, 0x88, 0x88, 0x88, 0x82,
    0xe8, 0x88, 0x88, 0x88, 0x82,
    0xe8, 0x88, 0x22, 0x88, 0x82,
    0xe8, 0x88, 0x2e, 0x88, 0x82,
    0xe8, 0x88, 0x88, 0x88, 0x20,
    0xe8, 0x88, 0x88, 0x88, 0x20,
    0x08, 0x88, 0x88, 0x22, 0x00,
    0x00, 0x22, 0x22, 0x00, 0x00,
};
Image LogoB_Image(LOGO_B_DATA);

const uint8_t LOGO_E_DATA[] = {
    10,   // frame width
    11,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x00, // transparent color
    1,    // indexed color mode

    0x00, 0x0e, 0xee, 0xe0, 0x00,
    0x00, 0xe8, 0x88, 0x88, 0x20,
    0x0e, 0x88, 0x88, 0x88, 0x82,
    0xe8, 0x88, 0x82, 0x88, 0x82,
    0xe8, 0x88, 0x2e, 0x88, 0x82,
    0xe8, 0x88, 0x88, 0x82, 0x20,
    0xe8, 0x88, 0x22, 0x28, 0x82,
    0xe8, 0x88, 0x88, 0x88, 0x82,
    0x08, 0x88, 0x88, 0x88, 0x20,
    0x00, 0x88, 0x88, 0x22, 0x00,
    0x00, 0x02, 0x22, 0x00, 0x00,
};
Image LogoE_Image(LOGO_E_DATA);

const uint8_t LOGO_L_DATA[] = {
    8,    // frame width
    15,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x00, // transparent color
    1,    // indexed color mode

    0x00, 0xee, 0x00, 0x00,
    0x0e, 0x88, 0x20, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x00,
    0xe8, 0x88, 0x82, 0x20,
    0xe8, 0x88, 0x28, 0x82,
    0xe8, 0x88, 0x88, 0x82,
    0xe8, 0x88, 0x88, 0x82,
    0x08, 0x88, 0x88, 0x20,
    0x00, 0x22, 0x22, 0x00,
};
Image LogoL_Image(LOGO_L_DATA);

const uint8_t LOGO_U_DATA[] = {
    10,   // frame width
    11,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x00, // transparent color
    1,    // indexed color mode

    0x00, 0x00, 0x00, 0xee, 0x00,
    0x00, 0xee, 0x0e, 0x88, 0x20,
    0x0e, 0x88, 0x28, 0x88, 0x82,
    0xe8, 0x88, 0x82, 0x88, 0x82,
    0xe8, 0x88, 0x82, 0x88, 0x82,
    0xe8, 0x88, 0x82, 0x88, 0x82,
    0xe8, 0x88, 0x82, 0x88, 0x82,
    0xe8, 0x88, 0x88, 0x88, 0x82,
    0x08, 0x88, 0x88, 0x88, 0x20,
    0x00, 0x88, 0x88, 0x22, 0x00,
    0x00, 0x02, 0x22, 0x00, 0x00,
};
Image LogoU_Image(LOGO_U_DATA);

const uint8_t LOGO_SOKO_DATA[] = {
    64,   // frame width
    24,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    0x0c, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0, 0x0c, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0, 0x0c, 0xcc, 0xcc, 0xc0, 0x0c, 0xcc, 0xcc, 0xc0, 0x0c, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xd1, 0x11, 0x11, 0x11, 0x10, 0xcd, 0xdd, 0xdd, 0xd1, 0x1d, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0x1d, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xd1, 0xcc, 0xcc, 0xcc, 0xc0, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x10, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0x00, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0x01, 0x11, 0x11, 0x11, 0x1d, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0x0c, 0xcc, 0xcc, 0xcc, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xd1, 0xcd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x01, 0x11, 0x11, 0x10, 0x01, 0x11, 0x11, 0x10, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10,
};
Image LogoSOKO_Image(LOGO_SOKO_DATA);
