#include "Images.h"

const uint8_t PLAYER_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x0a, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x05, // transparent color
    1,    // indexed color mode

    // frame 1/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x07, 0x60, 0x65,
    0x54, 0x06, 0x60, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x55, 0x55, 0x55, 0x55,

    // frame 2/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x00, 0x00, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x07, 0x60, 0x45,
    0x54, 0x06, 0x60, 0x45,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 3/10
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x00, 0x00, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x07, 0x60, 0x45,
    0x56, 0x06, 0x60, 0x65,
    0x54, 0x00, 0x00, 0x45,
    0x54, 0x00, 0x00, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 4/10
    0x55, 0x54, 0x55, 0x55,
    0x55, 0x40, 0x00, 0x55,
    0x56, 0x00, 0x00, 0x05,
    0x54, 0x07, 0x60, 0x04,
    0x40, 0x06, 0x60, 0x45,
    0x50, 0x00, 0x00, 0x65,
    0x55, 0x00, 0x04, 0x55,
    0x55, 0x55, 0x45, 0x55,

    // frame 5/10
    0x55, 0x55, 0x45, 0x55,
    0x55, 0x64, 0x00, 0x55,
    0x54, 0x00, 0x00, 0x05,
    0x40, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x04,
    0x50, 0x00, 0x00, 0x45,
    0x55, 0x00, 0x46, 0x55,
    0x55, 0x54, 0x55, 0x55,

    // frame 6/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x46, 0x44, 0x65,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x54, 0x46, 0x44, 0x65,
    0x55, 0x55, 0x55, 0x55,

    // frame 7/10
    0x55, 0x55, 0x55, 0x55,
    0x54, 0x64, 0x46, 0x45,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x54, 0x64, 0x46, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 8/10
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x44, 0x64, 0x45,
    0x50, 0x00, 0x00, 0x05,
    0x50, 0x07, 0x60, 0x05,
    0x50, 0x06, 0x60, 0x05,
    0x50, 0x00, 0x00, 0x05,
    0x56, 0x44, 0x64, 0x45,
    0x55, 0x55, 0x55, 0x55,

    // frame 9/10
    0x55, 0x54, 0x55, 0x55,
    0x55, 0x00, 0x46, 0x55,
    0x50, 0x00, 0x00, 0x45,
    0x50, 0x07, 0x60, 0x04,
    0x40, 0x06, 0x60, 0x05,
    0x54, 0x00, 0x00, 0x05,
    0x55, 0x64, 0x00, 0x55,
    0x55, 0x55, 0x45, 0x55,

    // frame 10/10
    0x55, 0x55, 0x45, 0x55,
    0x55, 0x00, 0x04, 0x55,
    0x50, 0x00, 0x00, 0x65,
    0x40, 0x07, 0x60, 0x45,
    0x54, 0x06, 0x60, 0x04,
    0x56, 0x00, 0x00, 0x05,
    0x55, 0x40, 0x00, 0x55,
    0x55, 0x54, 0x55, 0x55
};

Image playerImage(PLAYER_DATA);

const uint8_t WALLS_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x15, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/21
    0x56, 0x66, 0x66, 0x65,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x51, 0x11, 0x11, 0x15,

    // frame 2/21
    0x06, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x51,

    // frame 3/21
    0x66, 0x66, 0x66, 0x60,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x15, 0x55, 0x55, 0x51,

    // frame 4/21
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x01, 0x11, 0x11, 0x11,

    // frame 5/21
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x11, 0x11, 0x11, 0x10,

    // frame 6/21
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,

    // frame 7/21
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x11, 0x11, 0x11, 0x11,

    // frame 8/21
    0x56, 0x66, 0x66, 0x65,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,

    // frame 9/21
    0x66, 0x66, 0x66, 0x65,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x11, 0x11, 0x11, 0x15,

    // frame 10/21
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x51,
    0x51, 0x11, 0x11, 0x15,

    // frame 11/21
    0x56, 0x66, 0x66, 0x66,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x51, 0x11, 0x11, 0x11,

    // frame 12/21
    0x66, 0x66, 0x66, 0x66,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x15, 0x55, 0x55, 0x51,

    // frame 13/21
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x15, 0x55, 0x55, 0x51,

    // frame 14/21
    0x65, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x11, 0x11, 0x11, 0x11,

    // frame 15/21
    0x65, 0x55, 0x55, 0x51,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x51,

    // frame 16/21
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x66, 0x66, 0x55,
    0x56, 0x55, 0x55, 0x15,
    0x56, 0x55, 0x55, 0x15,
    0x56, 0x55, 0x55, 0x15,
    0x56, 0x55, 0x55, 0x15,
    0x55, 0x11, 0x11, 0x55,
    0x55, 0x55, 0x55, 0x55,

    // frame 17/21
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x10,
    0x55, 0x55, 0x51, 0x00,
    0x55, 0x55, 0x55, 0x00,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,

    // frame 18/21
    0x00, 0x00, 0x00, 0x66,
    0x00, 0x00, 0x06, 0x55,
    0x00, 0x00, 0x65, 0x55,
    0x00, 0x06, 0x55, 0x55,
    0x00, 0x65, 0x55, 0x55,
    0x06, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,

    // frame 19/21
    0x66, 0x00, 0x00, 0x00,
    0x55, 0x50, 0x00, 0x00,
    0x55, 0x55, 0x00, 0x00,
    0x55, 0x55, 0x50, 0x00,
    0x55, 0x55, 0x55, 0x00,
    0x55, 0x55, 0x55, 0x50,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,

    // frame 20/21
    0x65, 0x55, 0x55, 0x55,
    0x65, 0x55, 0x55, 0x55,
    0x05, 0x55, 0x55, 0x55,
    0x00, 0x55, 0x55, 0x55,
    0x00, 0x05, 0x55, 0x55,
    0x00, 0x00, 0x55, 0x55,
    0x00, 0x00, 0x05, 0x55,
    0x00, 0x00, 0x00, 0x11,

    // frame 21/21
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x51,
    0x55, 0x55, 0x55, 0x10,
    0x55, 0x55, 0x51, 0x00,
    0x55, 0x55, 0x10, 0x00,
    0x55, 0x51, 0x00, 0x00,
    0x55, 0x10, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00
};

Image wallsImage(WALLS_DATA);

const uint8_t BOX_DATA[] = {
    6,    // frame width
    6,    // frame height
    0x08, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0x0,  // transparent color
    1,    // indexed color mode

    // frame 1/8
    0x0e, 0xee, 0xe0,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0xe8, 0x88, 0x82,
    0x02, 0x22, 0x20,

    // frame 2/8
    0x08, 0x88, 0x80,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x82, 0x22, 0x22,
    0x02, 0x22, 0x20,

    // frame 3/8
    0x0b, 0xbb, 0xb0,
    0xb3, 0x33, 0x31,
    0xb3, 0x33, 0x31,
    0xb3, 0x33, 0x31,
    0xb3, 0x33, 0x31,
    0x01, 0x11, 0x10,

    // frame 4/8
    0x03, 0x33, 0x30,
    0x31, 0x11, 0x11,
    0x31, 0x11, 0x11,
    0x31, 0x11, 0x11,
    0x31, 0x11, 0x11,
    0x01, 0x11, 0x10,

    // frame 5/8
    0x0c, 0xcc, 0xc0,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0xcd, 0xdd, 0xd1,
    0x01, 0x11, 0x10,

    // frame 6/8
    0x0d, 0xdd, 0xd0,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0xd1, 0x11, 0x11,
    0x01, 0x11, 0x10,

    // frame 7/8
    0x0a, 0xaa, 0xa0,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0xa9, 0x99, 0x94,
    0x04, 0x44, 0x40,

    // frame 8/8
    0x09, 0x99, 0x90,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x94, 0x44, 0x44,
    0x04, 0x44, 0x40
};

Image boxImage(BOX_DATA);

const uint8_t TARGET_DATA[] = {
    8,    // frame width
    8,    // frame height
    0x05, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode

    // frame 1/5
    0x55, 0x55, 0x55, 0x55,
    0x58, 0x85, 0x58, 0x85,
    0x58, 0x55, 0x55, 0x85,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x58, 0x55, 0x55, 0x85,
    0x58, 0x85, 0x58, 0x85,
    0x55, 0x55, 0x55, 0x55,

    // frame 2/5
    0x55, 0x55, 0x55, 0x55,
    0x53, 0x35, 0x53, 0x35,
    0x53, 0x55, 0x55, 0x35,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x53, 0x55, 0x55, 0x35,
    0x53, 0x35, 0x53, 0x35,
    0x55, 0x55, 0x55, 0x55,

    // frame 3/5
    0x55, 0x55, 0x55, 0x55,
    0x5d, 0xd5, 0x5d, 0xd5,
    0x5d, 0x55, 0x55, 0xd5,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x5d, 0x55, 0x55, 0xd5,
    0x5d, 0xd5, 0x5d, 0xd5,
    0x55, 0x55, 0x55, 0x55,

    // frame 4/5
    0x55, 0x55, 0x55, 0x55,
    0x59, 0x95, 0x59, 0x95,
    0x59, 0x55, 0x55, 0x95,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x59, 0x55, 0x55, 0x95,
    0x59, 0x95, 0x59, 0x95,
    0x55, 0x55, 0x55, 0x55,

    // frame 5/5
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x65, 0x56, 0x65,
    0x56, 0x55, 0x55, 0x65,
    0x55, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x55, 0x55,
    0x56, 0x55, 0x55, 0x65,
    0x56, 0x65, 0x56, 0x65,
    0x55, 0x55, 0x55, 0x55
};

Image targetImage(TARGET_DATA);

const uint8_t BUBBLE_DATA[] = {
    4,    // frame width
    4,    // frame height
    0x04, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0,    // transparent color
    1,    // indexed color mode

    // frame 1/4
    0x0e, 0x80,
    0xe7, 0xe8,
    0x8e, 0x88,
    0x08, 0x80,

    // frame 2/4
    0x0b, 0x30,
    0xb7, 0xb3,
    0x3b, 0x33,
    0x03, 0x30,

    // frame 3/4
    0x0c, 0xd0,
    0xc7, 0xcd,
    0xdc, 0xdd,
    0x0d, 0xd0,

    // frame 4/4
    0x0a, 0x90,
    0xa7, 0xa9,
    0x9a, 0x99,
    0x09, 0x90
};

Image bubbleImage(BUBBLE_DATA);
